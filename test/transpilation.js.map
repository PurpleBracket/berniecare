{"version":3,"sources":["../../src/test/transpilation.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,wBAAK,oCAAoC;uEAAE,iBAAgB,CAAC;QACtD,OAAO,EACP,SAAS,EACT,OAAO,EACP,OAAO,EACP,KAAK;;;;;AAJL,mBAAO,GAAG,eAAK,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC;AACvC,qBAAS,GAAG,eAAK,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;AACrC,mBAAO,GAAG,eAAK,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC;;mBACpB,2BAAK,SAAS,GAAG,oBAAoB,CAAC;;;AAAtD,mBAAO;;mBACO,kBAAQ,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM,EAAI;AAClD,kBAAI,IAAI,GAAG,eAAK,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAA;AAClE,qBAAO,kBAAQ,GAAG,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,oBAAG,IAAI,CAAC,MAAM,CAAC,EAAE,oBAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;aACnE,CAAC,CAAC;;;AAHC,iBAAK;;AAIT,iBAAK,CAAC,OAAO,CAAC,gBAA4C;;;kBAA1C,MAAM;kBAAE,IAAI;kBAAE,WAAW;kBAAE,SAAS;;AAClD,eAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,sCAAsC,CAAC,CAAA;aAC7I,CAAC,CAAA;;;;;;;;GACH;;;;KAAC,CAAA","file":"transpilation.js","sourcesContent":["import test from 'blue-tape'\nimport glob from 'glob-promise'\nimport fs from 'fs-promise'\nimport path from 'path'\n\ntest('transpilation should be up to date', async function (t) {\n  let rootDir = path.join(__dirname, '../..')\n  let sourceDir = path.join(rootDir, 'src')\n  let distDir = path.join(rootDir, 'dist')\n  let sources = await glob(__dirname + '/../../src/**/*.js')\n  let stats = await Promise.all(sources.map(source => {\n    let dist = path.join(distDir, source.substr(sourceDir.length + 1))\n    return Promise.all([source, dist, fs.stat(source), fs.stat(dist)])\n  }))\n  stats.forEach(([source, dist, sourceStats, distStats]) => {\n    t.ok(new Date(distStats.mtime) >= new Date(sourceStats.mtime), source.substr(sourceDir.length + 1) + ' should be transpiled and up to date')\n  })\n})\n"]}