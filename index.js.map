{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react'\nimport ReactDom from 'react-dom'\n\nconst STANDARD_DEDUCTION = 12600\nconst EXEMPTION = 4050\nconst INCOME_TAX_PREMIUM = 0.022\nconst AVERAGE_HEALTHCARE_COST = 4955 + 1318\n\nconst CURRENT = Symbol()\nconst FUTURE = Symbol()\n\nconst RATES = {\n  [CURRENT]: [{\n    maxIncome: 9275,\n    rate: 0.1\n  }, {\n    maxIncome: 37650,\n    rate: 0.15\n  }, {\n    maxIncome: 91150,\n    rate: 0.25\n  }, {\n    maxIncome: 190150,\n    rate: 0.28\n  }, {\n    maxIncome: 413350,\n    rate: 0.33\n  }, {\n    maxIncome: 415050,\n    rate: 0.35\n  }, {\n    rate: 0.396\n  }],\n  [FUTURE]: [{\n    maxIncome: 9275,\n    rate: 0.1 + INCOME_TAX_PREMIUM\n  }, {\n    maxIncome: 37650,\n    rate: 0.15 + INCOME_TAX_PREMIUM\n  }, {\n    maxIncome: 91150,\n    rate: 0.25 + INCOME_TAX_PREMIUM\n  }, {\n    maxIncome: 190150,\n    rate: 0.28 + INCOME_TAX_PREMIUM\n  }, {\n    maxIncome: 250000,\n    rate: 0.33 + INCOME_TAX_PREMIUM\n  }, {\n    maxIncome: 500000,\n    rate: 0.37\n  }, {\n    maxIncome: 2000000,\n    rate: 0.43\n  }, {\n    maxIncome: 10000000,\n    rate: 0.48\n  }, {\n    rate: 0.52\n  }]\n}\n\nfunction totalTaxes (type, totalIncome, exemptions) {\n  let taxableIncome = totalIncome - STANDARD_DEDUCTION - (exemptions * EXEMPTION)\n  let taxes = 0\n  let taxedIncome = 0\n  for (let {maxIncome, rate} of RATES[type]) {\n    if (taxedIncome !== taxableIncome) {\n      let incomeInThisBracket\n\n      if (maxIncome) {\n        incomeInThisBracket = Math.min(maxIncome, taxableIncome) - taxedIncome\n      } else {\n        incomeInThisBracket = taxableIncome - taxedIncome\n      }\n\n      taxes += incomeInThisBracket * rate\n      taxedIncome += incomeInThisBracket\n    }\n  }\n  return Math.max(taxes, 0)\n}\n\nclass App extends React.Component {\n  constructor () {\n    super()\n    this.state = { income: 50000, exemptions: 4, healthcare: AVERAGE_HEALTHCARE_COST }\n  }\n  render () {\n    let { income, exemptions, healthcare, advanced } = this.state\n\n    let setIncome = e => this.setState({income: e.target.value})\n    let setExemptions = e => this.setState({exemptions: e.target.value})\n    let setHealthcare = e => this.setState({healthcare: e.target.value})\n    let toggleAdvanced = () => this.setState({advanced: !advanced})\n\n    let additionalTax = Math.round((totalTaxes(FUTURE, income, exemptions) - totalTaxes(CURRENT, income, exemptions)) * 100) / 100\n    let costDelta = healthcare - additionalTax\n\n    return <div>\n      <label className=\"inputArea\">\n        <div className=\"label\">Household income</div>\n        <input type=\"number\" value={ income } onChange={ setIncome }></input>\n        <span className=\"dollarSign\">$</span>\n      </label>\n      <label className=\"inputArea\">\n        <div className=\"label\">Number of exemptions</div>\n        <input type=\"number\" value={ exemptions } onChange={ setExemptions }></input>\n      </label>\n      <label className=\"inputArea\">\n        <div className=\"label\">Current healthcare costs</div>\n        <input type=\"number\" value={ healthcare } onChange={ setHealthcare }></input>\n        <span className=\"dollarSign\">$</span>\n      </label>\n      { costDelta >= 0 ? <div className=\"savings\">\n        ${ costDelta } saved each year\n      </div> : <div className=\"costs\">\n        ${ -costDelta } in additional costs each year\n      </div> }\n    </div>\n  }\n}\n\nReactDom.render(<App></App>, document.getElementById('app'))\n"]}